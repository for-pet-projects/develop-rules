# .clang-tidy
---
Checks: >
  clang-analyzer-*,             # Static analysis: null deref, uninit, etc.
  cppcoreguidelines-*,          # Core Guidelines
  modernize-*,                  # Modern C++ style suggestions
  performance-*,                # Optimize value handling, loops, etc.
  readability-*,                # Improve code clarity
  bugprone-*,                   # Catch risky patterns
  portability-*,                # Cross-platform issues
  hicpp-*,                      # High-integrity profile extensions

  # Explicit exclusions
  -hicpp-no-assembler,                         # Allow inline asm if needed
  -cppcoreguidelines-pro-type-union-access,    # Allow union access
  -cppcoreguidelines-pro-type-vararg,          # Allow printf, variadics
  -readability-include-order,                  # Covered by .clang-format

WarningsAsErrors: '*'                          # Treat all warnings as errors

CheckOptions:
  # Identifier naming conventions
  - key:             readability-identifier-naming.ClassCase
    value:           CamelCase
  - key:             readability-identifier-naming.FunctionCase
    value:           camelBack
  - key:             readability-identifier-naming.VariableCase
    value:           camelBack
  - key:             readability-identifier-naming.ParameterCase
    value:           camelBack

  # Magic numbers (allowed: 0, 1, -1)
  - key:             cppcoreguidelines-avoid-magic-numbers.IgnoreEnums
    value:           false
  - key:             cppcoreguidelines-avoid-magic-numbers.IgnoreMacros
    value:           false
  - key:             cppcoreguidelines-avoid-magic-numbers.IgnoredValues
    value:           '0, 1, -1'
  - key:             hicpp-avoid-magic-numbers.IgnoreEnums
    value:           false
  - key:             hicpp-avoid-magic-numbers.IgnoreMacros
    value:           false
  - key:             hicpp-avoid-magic-numbers.IgnoredValues
    value:           '0, 1, -1'

  # Prefer explicit bool comparisons
  - key:             readability-implicit-bool-conversion.AllowPointerConditions
    value:           false
  - key:             readability-implicit-bool-conversion.AllowIntegerConditions
    value:           false

  # Enforce Rule of 5 / Rule of 0
  - key:             cppcoreguidelines-special-member-functions.CheckMissingMoveFunctions
    value:           true

  # Max copy size allowed for loop conversions
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'

  # Macro use restrictions
  - key:             cppcoreguidelines-macro-usage.CheckCapsOnly
    value:           false
  - key:             cppcoreguidelines-macro-usage.IncludeUsedHeaders
    value:           true

  # Function size limits
  - key:             readability-function-size.LineThreshold
    value:           '80'
  - key:             readability-function-size.StatementThreshold
    value:           '100'
  - key:             readability-function-size.BranchThreshold
    value:           '10'

HeaderFilterRegex: '.*'                        # Check everything
FormatStyle: file                              # Use .clang-format for formatting
...
